"""
Script to add image support to Jekyll posts
- Move image folder to /assets/img/posts/
- Add folder prefix to png markdown
"""
import os
import shutil
import sys


def move_image_files(file_title):
    """ move NBconvert created image files to jekyll folder """

    source = file_title + '_files'

    # Check if source image folder exists.  Exit if no image folder
    if os.path.isdir(source) is False:
        print('[INFO] no image files associated with this notebook. Exiting script.')
        raise SystemExit
    else:
        print('[INFO] Image files found. Source folder is "{}"'.format(source))

    # Path to destination folder
    destination = '../assets/img/posts/' + source

    # Create destination folder if it doesn't exist
    if os.path.isdir(destination) is False:
        print('[INFO] Destination folder created at "{}"'.format(destination))
        os.mkdir(destination)
    # Delete existing contents if destination folder exists
    else:
        existing_files = os.listdir(destination)
        print('[INFO] Destination folder is not empty. Deleting all files in "{}"'.format(destination))
        for f in existing_files:
            os.remove(destination + '/' + f)

    # move files over
    filelist = os.listdir(source)
    for f in filelist:
        print('[INFO] ... copying {} to {}'.format(f, destination))
        shutil.copy(source + '/' + f, destination)

    # After copy, delete image folder
    print('[INFO] Removing source directory "{}"'.format(source))
    shutil.rmtree(source)


def fix_png_markdown(filename):
    """
    Fix markdown for png images generated by NBconvert
    - Prefix all ![png](...) in markdown with the jekyll path to folder
    - Add Bootstrap4 classes for responsive and centered images
    """
    with open(filename, 'r+') as f:
        lines = f.readlines()
        f.seek(0)
        f.truncate()
        for line in lines:
            if '![png](' in line:
                line = line.replace('![png](', '![png](/assets/img/posts/').rstrip('\n')
                line = ''.join([line, '{:class="img-fluid mx-auto d-block"}'])
            f.write(line)


# Main script
print('[SCRIPT] running add_image_support.py')
notebook_name = sys.argv[1].split('.')[0]
move_image_files(notebook_name)
fix_png_markdown(notebook_name + '.md')
